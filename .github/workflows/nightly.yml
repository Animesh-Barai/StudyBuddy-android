name: Nightly releases

on:
  schedule:
    - cron: "0 0 * * *" # Executes every day at 12 midnight UTC
# on: push # TODO: Remove this once workflow has been tested

jobs:
  deploy:
    #runs-on: macOS-latest # TODO: Move back to Ubuntu once Android 29 support has been added
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1
    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
#     - name: Install Android SDK Platform 29 and Build-Tools 29.0.2
#       run: |
#         cd
#         echo "Current working directory:"
#         pwd
#         wget -nv https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip
#         unzip -q sdk-tools-linux-4333796.zip
#         rm sdk-tools-linux-4333796.zip
#         mkdir android-sdk
#         mv tools android-sdk/tools

#         echo "Available Platform Tools:"
#         ls -hAFl --color=auto ~/android-sdk/tools/bin
#         echo "Adding Android SDK to PATH..."
#         echo '# Export the Android SDK path' >> ~/.profile
#         echo 'export ANDROID_HOME=$HOME/android-sdk' >> ~/.profile
#         echo 'PATH=$PATH:$ANDROID_HOME/tools/bin' >> ~/.profile
#         echo -e '\n# Fixes sdkmanager error with java versions higher than java 8' >> ~/.profile
#         echo '# export JAVA_OPTS="-XX:+IgnoreUnrecognizedVMOptions --add-modules java.se.ee"' >> ~/.profile
#         echo "Result of cat ~/.profile:"
#         cat ~/.profile
#         source ~/.profile
#         echo "Current PATH:"
#         echo $PATH
#         echo "Accepting licenses..."
#         yes | sdkmanager --licenses
#         echo "Installing Android SDK Platform 29 and Build-Tools 29.0.2 with sdkmanager..."
#         sdkmanager "build-tools;29.0.2" "platforms;android-29" | grep -v = || true
    - name: Install GPG2
      run: sudo apt-get install gnupg2
    - name: Install Homebrew
      run: |
        sh -c "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install.sh)"
        test -d ~/.linuxbrew && eval $(~/.linuxbrew/bin/brew shellenv)
        test -d /home/linuxbrew/.linuxbrew && eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
        test -r ~/.bash_profile && echo "eval \$($(brew --prefix)/bin/brew shellenv)" >>~/.bash_profile
        echo "eval \$($(brew --prefix)/bin/brew shellenv)" >>~/.profile
        sudo apt-get install build-essential curl file git
        echo "Current path:"
        echo $PATH
    - name: Install Homebrew dependencies
      run: |
        source ~/.profile
        brew bundle
    - name: Decrypt keystore
      run: |
        source ~/.profile
        echo "Current version of transcrypt:"
        transcrypt -v
        transcrypt -c ${{ secrets.TRANSCRYPT_CIPHER }} -p ${{ secrets.TRANSCRYPT_PASSWORD }}
      env:
        SECRETS_GPG_COMMAND: gpg2
    - name: Build app
      run: |
        source ~/.profile
        ./gradlew :app:assembleNightly # APK is available at app/build/outputs/apk/nightly/app-nightly.apk
      env:
        CI: ${{ true }}
        APP_KEYSTORE_PASSWORD: ${{ secrets.APP_KEYSTORE_PASSWORD }}
        APP_KEYSTORE_ALIAS: ${{ secrets.APP_KEYSTORE_ALIAS }}
        APP_KEYSTORE_ALIAS_PASSWORD: ${{ secrets.APP_KEYSTORE_ALIAS_PASSWORD }}
    - name: Upload artifacts
      uses: actions/upload-artifact@master
      with:
        name: app-nightly.apk
        path: app/build/outputs/apk/nightly/app-nightly.apk
